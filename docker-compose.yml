# adapted from: https://www.goodbytes.be/blog/article/docker-a-simple-example-for-a-php-mysql-setup
# use version 3 of the docker compose syntax
version: '3.2'
services:
  # container: Ruby on Rails
  server:
    hostname: server.ee5.local # hostname inside container
    user: ${HOST_UID:?Run 'make .env' to fix}:${HOST_GID} # run docker container as host user (fix volume permissions) (values taken from ./.env)
    build:
      context: .
      dockerfile: .docker/server.dockerfile # NOTE: relative to (this) compose file
      args: # NOTE: vars used in docker-compose.yml itself need to be stored in .env
        - HOST_UID # taken from .env
        - HOST_GID # taken from .env
        - NODE_MODULES_PATH # taken from .env
        - RAILS_PORT # taken from .env
        - LIVERELOAD_PORT # taken from .env
        - USE_LIVERELOAD=true # comment to disable
        - WEBPACKER_PORT # taken from .env
        - USE_WEBPACKER=true # webpacker dev server, comment to disable
        - POSTGRES_USER # taken from .env
        - POSTGRES_PASSWORD # taken from .env
        - RUBYOPT=-W:no-deprecated -W:no-experimental # clean up rails prompts
        # - RAILS_LOG_TO_STDOUT=true # comment to disable
    image: server.ee5.local
    command: bash -c "rm -f tmp/pids/server.pid && foreman start"
    ports:
        - $RAILS_PORT:$RAILS_PORT
        - $LIVERELOAD_PORT:$LIVERELOAD_PORT
        - $WEBPACKER_PORT:$WEBPACKER_PORT
    volumes:
      - ./server:/server # shared folder; container sees local changes
    depends_on:
      - db # first load the 'db' service

  db:
    image: postgres
    volumes:
      - ee5-postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_USER=$POSTGRES_USER

volumes:
  ee5-postgres:
